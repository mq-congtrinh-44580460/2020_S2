<?xml version='1.0' encoding='UTF-8'?>
<testsuite hostname="mrrobot1802" name="funlang.SyntaxAnalysisTests" tests="24" errors="0" failures="0" skipped="0" time="0.027" timestamp="2020-10-24T03:07:44">
                     <properties>
      <property name="jline.esc.timeout" value="0"/><property name="jna.platform.library.path" value="/usr/lib/x86_64-linux-gnu:/lib/x86_64-linux-gnu:/usr/lib64:/lib64:/usr/lib:/lib:/lib/i386-linux-gnu"/><property name="java.runtime.name" value="OpenJDK Runtime Environment"/><property name="sun.boot.library.path" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64"/><property name="java.vm.version" value="25.272-b00"/><property name="java.vm.vendor" value="Private Build"/><property name="java.vendor.url" value="http://java.oracle.com/"/><property name="path.separator" value=":"/><property name="jna.loaded" value="true"/><property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/><property name="file.encoding.pkg" value="sun.io"/><property name="user.country" value="AU"/><property name="sun.java.launcher" value="SUN_STANDARD"/><property name="sun.os.patch.level" value="unknown"/><property name="jna.nosys" value="true"/><property name="java.vm.specification.name" value="Java Virtual Machine Specification"/><property name="user.dir" value="/home/mrrobot1802/repo/2020_S2/COMP3000/comp3000-ass3nosyn"/><property name="java.runtime.version" value="1.8.0_272-8u272~b09-0ubuntu1-b00"/><property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/><property name="java.endorsed.dirs" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed"/><property name="os.arch" value="amd64"/><property name="java.io.tmpdir" value="/tmp"/><property name="line.separator" value="
"/><property name="java.vm.specification.vendor" value="Oracle Corporation"/><property name="log4j.ignoreTCL" value="true"/><property name="os.name" value="Linux"/><property name="sun.jnu.encoding" value="UTF-8"/><property name="jnidispatch.path" value="/home/mrrobot1802/.cache/JNA/temp/jna6536573229634102655.tmp"/><property name="java.library.path" value="/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib"/><property name="java.specification.name" value="Java Platform API Specification"/><property name="java.class.version" value="52.0"/><property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/><property name="os.version" value="5.8.0-25-generic"/><property name="swoval.tmpdir" value="/home/mrrobot1802/.sbt/1.0"/><property name="user.home" value="/home/mrrobot1802"/><property name="user.timezone" value="Australia/Sydney"/><property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/><property name="file.encoding" value="UTF-8"/><property name="java.specification.version" value="1.8"/><property name="java.class.path" value="/usr/share/sbt/bin/sbt-launch.jar"/><property name="user.name" value="mrrobot1802"/><property name="jline.shutdownhook" value="false"/><property name="java.vm.specification.version" value="1.8"/><property name="sun.java.command" value="/usr/share/sbt/bin/sbt-launch.jar"/><property name="java.home" value="/usr/lib/jvm/java-8-openjdk-amd64/jre"/><property name="sun.arch.data.model" value="64"/><property name="user.language" value="en"/><property name="java.specification.vendor" value="Oracle Corporation"/><property name="awt.toolkit" value="sun.awt.X11.XToolkit"/><property name="java.vm.info" value="mixed mode"/><property name="java.version" value="1.8.0_272"/><property name="java.ext.dirs" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext"/><property name="sun.boot.class.path" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes"/><property name="java.vendor" value="Private Build"/><property name="file.separator" value="/"/><property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/><property name="sun.io.unicode.encoding" value="UnicodeLittle"/><property name="sun.cpu.endian" value="little"/><property name="sun.desktop" value="gnome"/><property name="sun.cpu.isalist" value=""/>
    </properties>
                     <testcase classname="funlang.SyntaxAnalysisTests" name="parsing an identifier of one letter produces the correct tree" time="0.007">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing an identifier as an identifier produces the correct tree" time="0.0">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing an identifier containing digits and underscores produces the correct tree" time="0.002">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing an integer as an identifier gives an error" time="0.002">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing a non-identifier as an identifier gives an error (digit)" time="0.0">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing a non-identifier as an identifier gives an error (underscore)" time="0.0">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing a keyword as an identifier gives an error" time="0.0">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing a keyword prefix as an identifier produces the correct tree" time="0.0">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing an integer of one digit as an integer produces the correct tree" time="0.0">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing an integer as an integer produces the correct tree" time="0.0">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing a non-integer as an integer gives an error" time="0.0">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing an equal expression produces the correct tree" time="0.001">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing a less than expression produces the correct tree" time="0.001">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing an addition expression produces the correct tree" time="0.001">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing a subtraction expression produces the correct tree" time="0.0">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing a multiplication expression produces the correct tree" time="0.001">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing a division expression produces the correct tree" time="0.001">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing an integer expression produces the correct tree" time="0.0">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing a true expression produces the correct tree" time="0.001">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing a false expression produces the correct tree" time="0.001">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing an identifier expression produces the correct tree" time="0.001">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing a parenthesized expression produces the correct tree" time="0.001">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing an application expression produces the correct tree" time="0.001">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing an if expression produces the correct tree" time="0.006">
                                                 
                                               </testcase>
                     <system-out><![CDATA[]]></system-out>
                     <system-err><![CDATA[]]></system-err>
                   </testsuite>