<?xml version='1.0' encoding='UTF-8'?>
<testsuite hostname="homepc" name="funlang.SyntaxAnalysisTests" tests="59" errors="0" failures="0" skipped="0" time="0.345" timestamp="2020-10-05T14:33:49">
                     <properties>
      <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/><property name="java.specification.version" value="11"/><property name="sun.cpu.isalist" value=""/><property name="sun.jnu.encoding" value="UTF-8"/><property name="sun.arch.data.model" value="64"/><property name="java.vendor.url" value="https://ubuntu.com/"/><property name="sun.boot.library.path" value="/usr/lib/jvm/java-11-openjdk-amd64/lib"/><property name="sun.java.command" value="/usr/share/sbt/bin/sbt-launch.jar"/><property name="jdk.debug" value="release"/><property name="java.specification.vendor" value="Oracle Corporation"/><property name="java.version.date" value="2020-07-14"/><property name="java.home" value="/usr/lib/jvm/java-11-openjdk-amd64"/><property name="file.separator" value="/"/><property name="java.vm.compressedOopsMode" value="32-bit"/><property name="line.separator" value="
"/><property name="java.specification.name" value="Java Platform API Specification"/><property name="java.vm.specification.vendor" value="Oracle Corporation"/><property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/><property name="java.runtime.version" value="11.0.8+10-post-Ubuntu-0ubuntu120.04"/><property name="user.name" value="mrrobot1802"/><property name="log4j.ignoreTCL" value="true"/><property name="file.encoding" value="UTF-8"/><property name="jnidispatch.path" value="/home/mrrobot1802/.cache/JNA/temp/jna3671840480152265400.tmp"/><property name="jna.loaded" value="true"/><property name="java.io.tmpdir" value="/tmp"/><property name="java.version" value="11.0.8"/><property name="java.vm.specification.name" value="Java Virtual Machine Specification"/><property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/><property name="sun.os.patch.level" value="unknown"/><property name="java.library.path" value="/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib"/><property name="java.vendor" value="Ubuntu"/><property name="scala.ext.dirs" value="/home/mrrobot1802/.sbt/0.13/java9-rt-ext-ubuntu_11_0_8"/><property name="sun.io.unicode.encoding" value="UnicodeLittle"/><property name="sun.desktop" value="gnome"/><property name="java.class.path" value="/usr/share/sbt/bin/sbt-launch.jar"/><property name="java.vm.vendor" value="Ubuntu"/><property name="jline.shutdownhook" value="false"/><property name="user.timezone" value="Australia/Sydney"/><property name="os.name" value="Linux"/><property name="java.vm.specification.version" value="11"/><property name="sun.java.launcher" value="SUN_STANDARD"/><property name="user.country" value="AU"/><property name="sun.cpu.endian" value="little"/><property name="user.home" value="/home/mrrobot1802"/><property name="user.language" value="en"/><property name="swoval.tmpdir" value="/home/mrrobot1802/.sbt/1.0"/><property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/><property name="jline.esc.timeout" value="0"/><property name="path.separator" value=":"/><property name="os.version" value="5.4.0-48-generic"/><property name="jna.nosys" value="true"/><property name="java.runtime.name" value="OpenJDK Runtime Environment"/><property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/><property name="jna.platform.library.path" value="/usr/lib/x86_64-linux-gnu:/lib/x86_64-linux-gnu:/lib64:/usr/lib:/lib:/usr/lib/i386-linux-gnu:/lib/i386-linux-gnu:/usr/lib/i386-linux-gnu/i686/sse2:/lib32:/usr/lib32:/usr/lib/i386-linux-gnu/sse2:/usr/lib/x86_64-linux-gnu/libfakeroot"/><property name="java.vendor.url.bug" value="https://bugs.launchpad.net/ubuntu/+source/openjdk-lts"/><property name="user.dir" value="/home/mrrobot1802/repo/2020_S2/COMP3000/comp3000-ass2c"/><property name="os.arch" value="amd64"/><property name="java.vm.info" value="mixed mode, sharing"/><property name="java.vm.version" value="11.0.8+10-post-Ubuntu-0ubuntu120.04"/><property name="java.class.version" value="55.0"/>
    </properties>
                     <testcase classname="funlang.SyntaxAnalysisTests" name="parsing an identifier of one letter produces the correct tree" time="0.034">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing an identifier as an identifier produces the correct tree" time="0.004">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing an identifier containing digits and underscores produces the correct tree" time="0.002">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing an integer as an identifier gives an error" time="0.006">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing a non-identifier as an identifier gives an error (digit)" time="0.002">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing a non-identifier as an identifier gives an error (underscore)" time="0.002">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing a keyword as an identifier gives an error" time="0.001">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing a keyword prefix as an identifier produces the correct tree" time="0.001">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing an integer of one digit as an integer produces the correct tree" time="0.009">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing an integer as an integer produces the correct tree" time="0.002">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing a non-integer as an integer gives an error" time="0.001">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing an equal expression produces the correct tree" time="0.021">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing a less than expression produces the correct tree" time="0.009">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing an addition expression produces the correct tree" time="0.007">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing a subtraction expression produces the correct tree" time="0.019">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing a multiplication expression produces the correct tree" time="0.011">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing a division expression produces the correct tree" time="0.005">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing an integer expression produces the correct tree" time="0.005">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing a true expression produces the correct tree" time="0.003">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing a false expression produces the correct tree" time="0.001">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing an identifier expression produces the correct tree" time="0.001">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing a parenthesized expression produces the correct tree" time="0.003">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing an application expression produces the correct tree" time="0.003">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing an if expression produces the correct tree" time="0.004">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing a non-identifier as an identifier gives an error (star)" time="0.001">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing a non-identifier as an identifier gives an error (hyphen)" time="0.001">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing a non-identifier as an identifier gives an error (@)" time="0.0">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing a negative integer of one digit as an integer produces the correct tree" time="0.0">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing a float gives an error" time="0.001">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing a float to exp should give an error but it does not" time="0.001">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing a negative to exp should give an error" time="0.0">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing a non-identifier as an exp gives an error (@)" time="0.003">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing an if expression with conditional expression produces the correct tree" time="0.003">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing an if expression with integer expression produces the correct tree" time="0.006">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing an if, block and start expression produces the correct tree" time="0.038">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing an nested if, block and star expression produces the correct tree" time="0.024">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing plus expresion with cond and start expression produces the correct tree" time="0.001">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing plus expresion with cond and start expression produces the correct tree workaround" time="0.004">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing nested equal expressions gives error with workaround" time="0.001">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing nested equal expressions gives partial correct tree" time="0.004">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing nested equal, +, * expressions gives correct tree" time="0.003">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing nested plus and minus expressions produces the correct tree" time="0.006">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing nested plus, minus, start, slash expressions produces the correct tree" time="0.011">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing nested equal, less, plus, minus, start, slash expressions produces the correct tree" time="0.001">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing block expressions produces the correct tree" time="0.006">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing nested block expressions produces the correct tree" time="0.003">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing nested block expressions gives error" time="0.003">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing normal app expression with idnuse f and idnuse g expressions produce correct tree" time="0.012">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing normal app expression with idnuse f and integer 0 expressions produce correct tree" time="0.001">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing normal app expression with integer 2 and integer 0 expressions produce partial correct tree" time="0.001">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing normal app expression with integer 2 and integer 0 expressions gives error" time="0.001">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing nested app expressions produces the correct tree" time="0.002">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing nested block, app expressions produces the correct tree" time="0.008">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing a block expression with one val expression, two function definitions and one expression produces the correct tree" time="0.016">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing a block expression with one val expression, one function definition and one expression produces the correct tree" time="0.003">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing a block expression with 2 val expression, one function definition and one expression gives error" time="0.008">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing a block expression with one invalid val expression, one function definition and one expression gives error" time="0.002">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing nested tipe functions produces the correct tree" time="0.01">
                                                 
                                               </testcase><testcase classname="funlang.SyntaxAnalysisTests" name="parsing nested tipe functions with bracket produces the correct tree" time="0.004">
                                                 
                                               </testcase>
                     <system-out><![CDATA[]]></system-out>
                     <system-err><![CDATA[]]></system-err>
                   </testsuite>